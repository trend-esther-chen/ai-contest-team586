Problem Description:

Trend Micro has multiple technical teams responsible for different product developments, each team is referred to as a "Y Team" and the number of people in each Y Team may not be the same. Now the company needs to hold a hackathon competition and it needs to divide all people into G groups as evenly as possible. Every employee from a Y Team must belong to the same group and cannot be split. Write a function:

```python3
def solution(teams: list[int], g: int) -> list[int]:
    pass
```

that gives the number of people in each group after division, sorted in descending order.

Input:

The first argument is an array, where each element represents the number of people in each Y Team. The second argument is the number of groups to be divided into.

Example:

Input:

[1,2,3,3,2,1], 4

Output:

An array, where each element represents the number of people in each group after the division.

Example:

Output:

[3,3,3,3]

Note:

The division should be as even as possible. In case of uneven division, the excess members should be assigned to the groups in a way that the difference between the largest group and the smallest one is minimized. The output should be sorted in descending order.
