Problem Description:

Given a natural number N, write a function:

```python3
def solution(n:int) -> list[str]:
    pass
```

to output all non-negative simplest fractions in ascending order. 
The fractions do not exceed N in both numerator and denominator (i.e., the size of the fraction is in the interval [0, 1]). A simplest fraction is defined as: the numerator is an integer, the denominator is a positive integer, and the fraction is irreducible (the greatest common divisor of the numerator and denominator is 1).

Input:

A single integer N (1 <= N <= 160)

Output:

An array of strings, each element representing a fraction, arranged in ascending order.

Example:

Input:

```
n = 7
```

Output:

['0/1', '1/7', '1/6', '1/5', '1/4', '2/7', '1/3', '2/5', '3/7', '1/2', '4/7', '3/5', '2/3', '5/7', '3/4', '4/5', '5/6', '6/7', '1/1']
